{
  "name": "@my-engineering/biomedical-platform",
  "version": "1.0.0",
  "description": "Comprehensive biomedical intelligence platform with AI-powered diagnostics, medical imaging, biosensing, HIPAA compliance, and maternal health monitoring",
  "private": true,
  "workspaces": [
    "ai-diagnostics/*",
    "medical-imaging-ai/*",
    "biosensing/*",
    "hipaa-compliance/*",
    "biotensor-labs/*",
    "mynx-natalcare/*",
    "shared/*"
  ],
  "scripts": {
    "install:all": "npm install && npm run install:services",
    "install:services": "npm run install:ai-diagnostics && npm run install:imaging && npm run install:biosensing && npm run install:hipaa && npm run install:biotensor && npm run install:mynx",
    "install:ai-diagnostics": "cd ai-diagnostics/backend && npm install && cd ../frontend && npm install",
    "install:imaging": "cd medical-imaging-ai/backend && npm install && cd ../frontend && npm install",
    "install:biosensing": "cd biosensing/backend && npm install && cd ../frontend && npm install",
    "install:hipaa": "cd hipaa-compliance/backend && npm install && cd ../frontend && npm install",
    "install:biotensor": "cd biotensor-labs/backend && npm install && cd ../frontend && npm install",
    "install:mynx": "cd mynx-natalcare/backend && npm install && cd ../frontend && npm install",
    "dev": "concurrently \"npm run dev:ai-diagnostics\" \"npm run dev:imaging\" \"npm run dev:biosensing\" \"npm run dev:hipaa\" \"npm run dev:biotensor\" \"npm run dev:mynx\"",
    "dev:ai-diagnostics": "cd ai-diagnostics/backend && npm run dev",
    "dev:imaging": "cd medical-imaging-ai/backend && npm run dev",
    "dev:biosensing": "cd biosensing/backend && npm run dev",
    "dev:hipaa": "cd hipaa-compliance/backend && npm run dev",
    "dev:biotensor": "cd biotensor-labs/backend && npm run dev",
    "dev:mynx": "cd mynx-natalcare/backend && npm run dev",
    "build": "npm run build:services && npm run build:frontends",
    "build:services": "npm run build:ai-diagnostics && npm run build:imaging && npm run build:biosensing && npm run build:hipaa && npm run build:biotensor && npm run build:mynx",
    "build:ai-diagnostics": "cd ai-diagnostics/backend && npm run build && cd ../frontend && npm run build",
    "build:imaging": "cd medical-imaging-ai/backend && npm run build && cd ../frontend && npm run build",
    "build:biosensing": "cd biosensing/backend && npm run build && cd ../frontend && npm run build",
    "build:hipaa": "cd hipaa-compliance/backend && npm run build && cd ../frontend && npm run build",
    "build:biotensor": "cd biotensor-labs/backend && npm run build && cd ../frontend && npm run build",
    "build:mynx": "cd mynx-natalcare/backend && npm run build && cd ../frontend && npm run build",
    "test": "npm run test:unit && npm run test:integration && npm run test:e2e",
    "test:unit": "jest --config jest.unit.config.js",
    "test:integration": "jest --config jest.integration.config.js",
    "test:e2e": "playwright test",
    "lint": "eslint . --ext .ts,.tsx,.js,.jsx",
    "lint:fix": "eslint . --ext .ts,.tsx,.js,.jsx --fix",
    "format": "prettier --write \"**/*.{ts,tsx,js,jsx,json,md}\"",
    "type-check": "tsc --noEmit",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "k8s:deploy": "kubectl apply -f infrastructure/kubernetes/",
    "terraform:init": "cd infrastructure/terraform && terraform init",
    "terraform:plan": "cd infrastructure/terraform && terraform plan",
    "terraform:apply": "cd infrastructure/terraform && terraform apply",
    "deploy:dev": "npm run build && npm run docker:build && npm run docker:up",
    "deploy:prod": "npm run build && npm run terraform:apply && npm run k8s:deploy"
  },
  "keywords": [
    "biomedical",
    "healthcare",
    "ai-diagnostics",
    "medical-imaging",
    "biosensing",
    "hipaa",
    "maternal-health",
    "machine-learning",
    "deep-learning",
    "fda-approved",
    "clinical-decision-support",
    "precision-medicine"
  ],
  "author": "M.Y. Engineering and Technologies - Biomedical Division",
  "license": "PROPRIETARY",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "dependencies": {
    "@aws-sdk/client-cloudtrail": "^3.454.0",
    "@aws-sdk/client-eks": "^3.454.0",
    "@aws-sdk/client-kms": "^3.454.0",
    "@aws-sdk/client-rds": "^3.454.0",
    "@aws-sdk/client-s3": "^3.454.0",
    "aws-sdk": "^2.1501.0",
    "axios": "^1.6.2",
    "bcryptjs": "^2.4.3",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "helmet": "^7.1.0",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "pg": "^8.16.3",
    "redis": "^4.6.11",
    "winston": "^3.18.3"
  },
  "devDependencies": {
    "@playwright/test": "^1.40.1",
    "@types/bcryptjs": "^2.4.6",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.10",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/node": "^20.10.0",
    "@typescript-eslint/eslint-plugin": "^6.13.2",
    "@typescript-eslint/parser": "^6.13.2",
    "concurrently": "^8.2.2",
    "eslint": "^8.55.0",
    "jest": "^29.7.0",
    "nodemon": "^3.0.2",
    "prettier": "^3.1.0",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.2",
    "typescript": "^5.3.2"
  }
}
